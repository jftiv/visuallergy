name: Build and Publish Docker Images

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    strategy:
      matrix:
        include:
          - context: ./client
            image: client
            dockerfile: ./client/Dockerfile
          - context: ./api
            image: api
            dockerfile: ./api/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for changes
        id: changes
        run: |
          # Check if client files changed
          if git diff --quiet HEAD~1 HEAD -- client/; then
            echo "client-changed=false" >> $GITHUB_OUTPUT
          else
            echo "client-changed=true" >> $GITHUB_OUTPUT
          fi
          
          # Check if api files changed
          if git diff --quiet HEAD~1 HEAD -- api/; then
            echo "api-changed=false" >> $GITHUB_OUTPUT
          else
            echo "api-changed=true" >> $GITHUB_OUTPUT
          fi
          
          # Debug output
          echo "Client changed: $(git diff --name-only HEAD~1 HEAD -- client/)"
          echo "API changed: $(git diff --name-only HEAD~1 HEAD -- api/)"

      - name: Log in to Container Registry
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'true') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'true')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'true') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'true')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'true') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'true')
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'true') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'true')
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ${{ matrix.image == 'client' && format('VITE_API_URL={0}', vars.CLIENT_API_URL) || '' }}

      - name: Generate artifact attestation
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'true') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'true')
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.image }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Skip notification
        if: (matrix.image == 'client' && steps.changes.outputs.client-changed == 'false') || (matrix.image == 'api' && steps.changes.outputs.api-changed == 'false')
        run: echo "No changes detected for ${{ matrix.image }}, skipping build and push"