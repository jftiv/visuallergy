# Define rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/h;
limit_req_zone $binary_remote_addr zone=meals:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Request body size limiting
client_max_body_size 1M;

server {
    listen 80;
    server_name localhost visuallergy.jftiv.org;
    root /usr/share/nginx/html;
    index index.html;

    # Global connection limits
    limit_conn conn_limit_per_ip 10;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # Block common attack patterns
    location ~* (eval\(|base64_|javascript:|<script|UNION|SELECT|INSERT|UPDATE|DELETE) {
        return 403;
    }

    # Block requests with suspicious user agents
    if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
        return 403;
    }

    # API proxy - forward /api/* to the API container
    location /api/ {
        limit_req zone=general burst=10 nodelay;
        limit_req_status 429;

        # Remove /api prefix when forwarding to backend
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy to API container
        proxy_pass http://api:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle CORS if needed
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Username";
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

        # Strict rate limiting for authentication endpoints
    location ~* ^/api/auth/(register|login) {
        # Very strict limits for auth operations
        limit_req zone=auth burst=2 nodelay;
        limit_req zone=strict burst=1 nodelay;
        limit_req_status 429;
        
        # Additional security for auth endpoints
        client_body_buffer_size 1k;
        client_header_buffer_size 1k;
        
        proxy_pass http://localhost:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

        # Rate limiting for meal creation
    location = /api/meals {
        if ($request_method = POST) {
            # Apply meal creation limits for POST requests
            limit_req zone=meals burst=5 nodelay;
        }
        
        # Regular limits for GET requests
        limit_req zone=general burst=10 nodelay;
        limit_req_status 429;
        
        proxy_pass http://localhost:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Custom error pages for rate limiting
    error_page 429 @rate_limit_error;

    location @rate_limit_error {
        add_header Content-Type application/json always;
        return 429 '{"error": "Rate limit exceeded. Please try again later.", "retry_after": "60"}';
    }

    # Handle client-side routing for the React app
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}